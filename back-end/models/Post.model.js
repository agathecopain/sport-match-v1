import mongoose from "mongoose";

const typesEnum = ["annonce", "event"];
const sportsEnum = [
  "aïkido",
  "alpinisme",
  "apnée",
  "art du cirque",
  "arts martiaux",
  "athlétisme",
  "athlétisme",
  "aviron",
  "badminton",
  "baseball",
  "baseball",
  "basketball",
  "beach volley",
  "biathlon",
  "billard",
  "bowling",
  "boxe",
  "canoë-kayak",
  "cirque",
  "cyclisme",
  "cyclisme",
  "danse",
  "épreuves combinées",
  "équitation",
  "escalade",
  "escrime",
  "esport",
  "fitness",
  "football américain",
  "football",
  "futsal",
  "gymnastique",
  "gymnastique",
  "handball",
  "hockey",
  "judo",
  "karaté",
  "karting",
  "lutte",
  "marche athlétique",
  "natation",
  "nautisme",
  "padel",
  "patinage",
  "pelote basque",
  "pentathlon",
  "pilate",
  "planche à voile",
  "plongée",
  "randonnée",
  "roller",
  "rugby",
  "ski",
  "sport aérien",
  "sport artistiques",
  "sport avec animaux",
  "sport collectif",
  "sport de combat",
  "sport de force",
  "sport de glace",
  "sport de plage",
  "sport de précision",
  "sport de raquettes",
  "sport en eau libre",
  "sport en eau vive",
  "sport en piscine",
  "sport mécanique",
  "sport subaquatique",
  "squash",
  "surf",
  "tennis de table",
  "tennis",
  "tir à l'arc",
  "tir",
  "triathlon",
  "volley",
  "yoga",
];
const levelEnum = ["débutant", "loisir", "intermédiaire", "avancé"];
const gendersEnum = ["femme", "homme", "autre"];

const postSchema = new mongoose.Schema(
  {
    type: { type: String, required: true, enum: typesEnum },
    author: {
      type: mongoose.Schema.Types.ObjectId,
      ref: "User",
      required: true,
    },
    group: {
      type: mongoose.Schema.Types.ObjectId,
      ref: "Group",
      required: true,
    },
    title: { type: String, required: true, trim: true, lowercase: true },
    sport: { type: String, required: true, enum: sportsEnum },
    level: { type: String, enum: levelEnum },
    gender: { type: String, required: true, enum: gendersEnum },
    imageUrl: { type: String },
    dateStart: { type: Date },
    dateEnd: { type: Date },
    body: { type: String },
    location: {
      adress: { type: String },
      city: { type: String },
      postCode: { type: String },
    },
    isActive: { type: Boolean },
    favs: { type: Number },
    visibleByAll: { type: Boolean },
  },
  { timestamps: true }
);
